#!/usr/bin/env bash

# Ensure PROJECT_ROOT is set
if [[ -z "$PROJECT_ROOT" ]]; then
  echo "PROJECT_ROOT environment variable is not set. Exiting."
  exit 1
fi

# Set the plugin directory and name
PLUGIN_DIR="$HOME/.terraform.d/plugins/local.providers/local/terratowns/1.0.0"
PLUGIN_NAME="terraform-provider-terratowns_v1.0.0"

# Debugging: Print variable values
echo "PROJECT_ROOT: $PROJECT_ROOT"
echo "PLUGIN_DIR: $PLUGIN_DIR"

# Build the provider
cd "$PROJECT_ROOT/terraform-provider-terratowns" || exit
go build -o "$PLUGIN_NAME"

# Prepare the plugin directory structure
mkdir -p "$PLUGIN_DIR/x86_64"
mkdir -p "$PLUGIN_DIR/linux_amd64"

# Debugging: Check if directories exist
ls -l "$PROJECT_ROOT"
ls -l "$PLUGIN_DIR"

# Copy the provider binary to the appropriate directories
cp "$PLUGIN_NAME" "$PLUGIN_DIR/x86_64/"
cp "$PLUGIN_NAME" "$PLUGIN_DIR/linux_amd64/"

# Copy the terraformrc to the appropriate location
cp "$PROJECT_ROOT/terraformrc" "$HOME/.terraformrc"

# Remove any existing plugin directory and lock files
rm -rf "$HOME/.terraform/plugins"
rm -f "$PROJECT_ROOT/terraform"
rm -f "$PROJECT_ROOT/terraform.lock.hcl"

# Print the directory structure for verification
echo "Directory structure after copying the provider:"
ls -R "$HOME/.terraform.d/plugins/"
